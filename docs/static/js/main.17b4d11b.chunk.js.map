{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","getGits","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GirexpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAkB9C,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,gBACRN,EAAWO,OAAOC,OAAO,IACzBV,GAAe,SAAAW,GAAI,OAAKT,GAAL,mBAAoBS,OACvCR,EAAc,OAQlB,4BAAKD,GACH,2BAAOU,KAAK,OAAOC,MAASX,EAAYY,SAlBpB,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,Y,uBCNdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCCXO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OADAZ,QAAQC,IAAIqB,EAAOV,GAEf,yBAAKc,UAAU,8CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCDHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAc,IAAD,EAEhBhB,mBAAS,CAC/BuB,KAAK,GACLa,SAAQ,IAJ8B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KA+B1C,OAxBAC,qBAAW,WAEPxB,EAAQC,GACPwB,MAAM,SAAAC,GAICnC,QAAQC,IAAIkC,GACZH,EAAS,CACTf,KAAMkB,EACNL,SAAQ,SAUlB,CAACpB,IAIIqB,EDzB4BK,CAAc1B,GAAjCa,EAHyB,EAG9BN,KAAaa,EAHiB,EAGjBA,QAyBpB,OAxBA9B,QAAQC,IAAI6B,GAyBR,oCACI,wBAAIJ,UAAU,yCAAyChB,GACtDoB,GAAY,uBAAGJ,UAAU,oCAAb,eAEb,yBAAKA,UAAU,aAIPH,EAAOJ,KAAK,SAACC,GAAD,OACR,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UERjBkB,EAjCM,WAAM,MAES5C,mBAAS,CAAC,cAFnB,mBAEpB6C,EAFoB,KAER9C,EAFQ,KAU3B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAEA,4BAGQ8C,EAAWpB,KAAM,SAACT,GAAD,OACT,kBAAC,EAAD,CACA2B,IAAK3B,EACLA,SAAUA,UCrBlC8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.17b4d11b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    const [InputValue, setInputValue] = useState('');\r\n\r\n    const handleInputchange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log('Submit hecho');\r\n        if (InputValue.trim().length>0) {\r\n            setCategories( cats => [InputValue, ...cats]);\r\n            setInputValue(\"\");\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n        <h5>{InputValue}</h5>\r\n          <input type='text' value = {InputValue} onChange={handleInputchange} /> \r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n    export const getGits = async(category) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=HJbFbqy2wWbGFPm0XLQi8kLBr6H2qe3e`;\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n    \r\n        return gifs;\r\n    }\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    console.log(title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGits } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const {data:images ,loading} = useFetchGifs( category );\r\n    console.log(loading);\r\n    // useEffect( () => {\r\n    //     // getGits();\r\n    //     getGits(category)\r\n    //     .then(imgs => setImages(imgs));\r\n    // },[category])\r\n\r\n/*     const getGits = async() => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=HJbFbqy2wWbGFPm0XLQi8kLBr6H2qe3e`;\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        console.log(gifs);\r\n        setImages(gifs);\r\n    }\r\n */\r\n    // getGits();\r\n\r\n    return (      \r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInDown\">{category}</h3>\r\n            {loading &&  <p className=\"animate__animated animate__flash\" >Cargando...</p> }\r\n            {/* {loading ?  <p>Cargando...</p> :null}  es lo mismo de la linea de arriba arriba*/}\r\n            <div className=\"card-grid\">\r\n        \r\n\r\n                    {\r\n                    images.map( (img) =>  ( \r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                        // <li key={img.id}>{img.title}</li> \r\n                        ))\r\n                    }\r\n\r\n            </div>     \r\n        </>\r\n\r\n    )\r\n}\r\n","import { useState,useEffect } from \"react\";\r\nimport {getGits} from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\nconst [state, setState] = useState({\r\n    data:[],\r\n    loading:true\r\n});\r\n\r\nuseEffect( () => {\r\n\r\n    getGits(category)\r\n    .then( imgs => {\r\n\r\n        // setTimeout(() => {\r\n            \r\n            console.log(imgs);\r\n            setState({\r\n            data: imgs,\r\n            loading:false\r\n            });\r\n\r\n        // }, 3000);\r\n\r\n\r\n    \r\n    });\r\n\r\n\r\n},[category])\r\n\r\n\r\n\r\nreturn state; // data:[], loading: true\r\n\r\n\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GirexpertApp = () => {\r\n// const cateries = ['One Punch','Samruria X','Dragon Ball']\r\nconst [categories, setCategories] = useState(['One Punch']);\r\n\r\n/* const handleAdd = () => {\r\n    // setCategories(['HunterXhunter',...categories]);\r\n    // setCategories([...categories,'HunterXhunter']);\r\n    setCategories( cats => [...cats,'HuterXhunter'])\r\n}; */\r\n\r\nreturn(\r\n    <>\r\n        <h2>GirexpertApp</h2>\r\n        <AddCategory setCategories = {setCategories} />\r\n        <hr/>\r\n \r\n        <ol>\r\n            {\r\n                // categories.map( (category) => {return <li key={category}>{category}</li>})\r\n                categories.map(  (category) => (\r\n                        <GifGrid \r\n                        key={category} \r\n                        category={category} \r\n                        />\r\n                    ))\r\n            }\r\n        </ol>\r\n    </>\r\n)\r\n\r\n\r\n};\r\n\r\nexport default GirexpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GipExpertApp from './GitExpertApp';\n\n\nReactDOM.render(\n    <GipExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}